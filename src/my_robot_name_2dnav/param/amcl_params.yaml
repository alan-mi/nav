min_particles: 1000 # ~min_particles (int, default: 100)：滤波器中的最少粒子数，值越大定位效果越好，但是相应的会增加主控平台的计算资源消耗。
max_particles: 10000 # ~max_particles (int, default: 5000)：滤波器中最多粒子数，是一个上限值，因为太多的粒子数会导致系统资源消耗过多。
kld_err: 0.01 # ~kld_err (double, default: 0.01)：真实分布与估计分布之间的最大误差。
kld_z: 0.99 # ~kld_z (double, default: 0.99)：上标准分位数（1-p），其中p是估计分布上误差小于kld_err的概率，默认0.99。
update_min_d: 0.2 # ~update_min_d (double, default: 0.2 meters)：在执行滤波更新前平移运动的距离，默认0.2m(对于里程计模型有影响，模型中根据运动和地图求最终位姿的似然时丢弃了路径中的相关所有信息，已知的只有最终位姿，为了规避不合理的穿过障碍物后的非零似然，这个值建议不大于机器人半径，否则因更新频率的不同可能产生完全不同的结果)。
update_min_a: 0.2 # ~update_min_a (double, default: π/6.0 radians)：执行滤波更新前旋转的角度。
resample_interval: 2 # ~resample_interval (int, default: 2)：在重采样前需要滤波更新的次数。
transform_tolerance: 0.5 # ~transform_tolerance (double, default: 0.1 seconds)：tf变换发布推迟的时间，为了说明tf变换在未来时间内是可用的。
recovery_alpha_slow: 0.001 # ~recovery_alpha_slow (double, default: 0.0 (disabled))：慢速的平均权重滤波的指数衰减频率，用作决定什么时候通过增加随机位姿来recover，默认0（disable），可能0.001是一个不错的值。
recovery_alpha_fast: 0.1 # ~recovery_alpha_fast (double, default: 0.0 (disabled))：快速的平均权重滤波的指数衰减频率，用作决定什么时候通过增加随机位姿来recover，默认0（disable），可能0.1是个不错的值。
initial_pose_x: 0 # ~initial_pose_x (double, default: 0.0 meters)：初始位姿均值（x），用于初始化高斯分布滤波器。（initial_pose_参数决定撒出去的初始位姿粒子集范围中心）。
initial_pose_y: 0 # ~initial_pose_y (double, default: 0.0 meters)：初始位姿均值（y），用于初始化高斯分布滤波器。（同上）
initial_pose_a: 0 # ~initial_pose_a (double, default: 0.0 radians)：初始位姿均值（yaw），用于初始化高斯分布滤波器。（粒子朝向）
initial_cov_xx: 0.25 # ~initial_cov_xx (double, default: 0.5*0.5 meters)：初始位姿协方差（x*x），用于初始化高斯分布滤波器。（initial_cov_参数决定初始粒子集的范围）
initial_cov_yy: 0.25 # ~initial_cov_yy (double, default: 0.5*0.5 meters)：初始位姿协方差（y*y），用于初始化高斯分布滤波器。（同上）
initial_cov_aa: 0.06853 # ~initial_cov_aa (double, default: (π/12)*(π/12) radian)：初始位姿协方差（yaw*yaw），用于初始化高斯分布滤波器。（粒子朝向的偏差）
gui_publish_rate: -1 # ~gui_publish_rate (double, default: -1.0 Hz)：扫描和路径发布到可视化软件的最大频率，设置参数为-1.0意为失能此功能，默认-1.0。
save_pose_rate: 0.5 # ~save_pose_rate (double, default: 0.5 Hz)：存储上一次估计的位姿和协方差到参数服务器的最大速率。被保存的位姿将会用在连续的运动上来初始化滤波器。-1.0失能。
use_map_topic: false # ~use_map_topic (bool, default: false)：当设置为true时，AMCL将会订阅map话题，而不是调用服务返回地图。也就是说当设置为true时，有另外一个节点实时的发布map话题，也就是机器人在实时的进行地图构建，并供给amcl话题使用；当设置为false时，通过map server，也就是调用已经构建完成的地图。
first_map_only: false # ~first_map_only (bool, default: false)：当设置为true时，AMCL将仅仅使用订阅的第一个地图，而不是每次接收到新的时更新为一个新的地图。
#
# （2）可以设置的所有激光模型参数
#
# 请注意无论使用哪种混合权重都应该等于1，对于laser_model_type是beam时会用到4个参数z_hit，z_short，z_max和z_rand，如果是likelihood_field模型仅使用2个：z_hit和z_rand。这4个laser_z_参数，是在动态环境下的定位时用于异常值去除技术的参数。
laser_min_range: -1 # ~laser_min_range (double, default: -1.0)：最小扫描范围，参数设置为-1.0时，将会使用激光上报的最小扫描范围。
laser_max_range: -1 # ~laser_max_range (double, default: -1.0)：最大扫描范围，参数设置为-1.0时，将会使用激光上报的最大扫描范围。
laser_max_beams: 100 # ~laser_max_beams (int, default: 30)：更新滤波器时，每次扫描中多少个等间距的光束被使用（减小计算量，测距扫描中相邻波束往往不是独立的可以减小噪声影响，太小也会造成信息量少定位不准）。
laser_z_hit: 0.95 # ~laser_z_hit (double, default: 0.95)：模型的z_hit部分的混合权值，默认0.95(混合权重1.具有局部测量噪声的正确范围--以测量距离近似真实距离为均值，其后laser_sigma_hit为标准偏差的高斯分布的权重)。
laser_z_short: 0.1 # ~laser_z_short (double, default: 0.1)：模型的z_short部分的混合权值，默认0.1（混合权重2.意外对象权重（类似于一元指数关于y轴对称0～测量距离（非最大距离）的部分：--ηλe^(-λz)，其余部分为0，其中η为归一化参数，λ为laser_lambda_short,z为t时刻的一个独立测量值（一个测距值，测距传感器一次测量通常产生一系列的测量值）），动态的环境，如人或移动物体）。
laser_z_max: 0.05 # ~laser_z_max (double, default: 0.05)：模型的z_max部分的混合权值，默认0.05（混合权重3.测量失败权重（最大距离时为1，其余为0），如声呐镜面反射，激光黑色吸光对象或强光下的测量，最典型的是超出最大距离）。
laser_z_rand: 0.05 # ~laser_z_rand (double, default: 0.05)：模型的z_rand部分的混合权值，默认0.05（混合权重4.随机测量权重--均匀分布（1平均分布到0～最大测量范围），完全无法解释的测量，如声呐的多次反射，传感器串扰）。
laser_sigma_hit: 0.2 # ~laser_sigma_hit (double, default: 0.2 meters)：被用在模型的z_hit部分的高斯模型的标准差，默认0.2m。
laser_lambda_short: 0.1 # ~laser_lambda_short (double, default: 0.1)：模型z_short部分的指数衰减参数，默认0.1（根据ηλe^(-λz)，λ越大随距离增大意外对象概率衰减越快）。
laser_likelihood_max_dist: 2.0 # ~laser_likelihood_max_dist (double, default: 2.0 meters)：地图上做障碍物膨胀的最大距离，用作likelihood_field模型（likelihood_field_range_finder_model只描述了最近障碍物的距离，（目前理解应该是在这个距离内的障碍物膨胀处理,但是算法里又没有提到膨胀，不明确是什么意思）.这里算法用到上面的laser_sigma_hit。似然域计算测量概率的算法是将t时刻的各个测量（舍去达到最大测量范围的测量值）的概率相乘，单个测量概率：Zh * prob(dist,σ) +avg，Zh为laser_z_hit,avg为均匀分布概率，dist最近障碍物的距离，prob为0为中心标准方差为σ（laser_sigma_hit）的高斯分布的距离概率。
laser_model_type: likelihood_field # ~laser_model_type (string, default: "likelihood_field")：激光模型类型定义，可以是beam, likehood_field, likehood_field_prob（和likehood_field一样但是融合了beamskip特征--官网的注释），默认是“likehood_field” 。
#
# （3）里程计模型参数
#
odom_model_type: diff # ~odom_model_type (string, default: "diff")：odom模型定义，可以是"diff", "omni", "diff-corrected", "omni-corrected"，后面两个是对老版本里程计模型的矫正，相应的里程计参数需要做一定的减小。
odom_alpha1: 1 # ~odom_alpha1 (double, default: 0.2)：指定由机器人运动部分的旋转分量估计的里程计旋转的期望噪声，默认0.2（旋转存在旋转噪声）。
odom_alpha2: 1 # ~odom_alpha2 (double, default: 0.2)：机器人运动部分的平移分量估计的里程计旋转的期望噪声，默认0.2（旋转中可能出现平移噪声）。
odom_alpha3: 1 # ~odom_alpha3 (double, default: 0.2)：机器人运动部分的平移分量估计的里程计平移的期望噪声，如果你自认为自己机器人的里程计信息比较准确那么就可以将该值设置的很小。
odom_alpha4: 1 # ~odom_alpha4 (double, default: 0.2)：机器人运动部分的旋转分量估计的里程计平移的期望噪声，你设置的这4个alpha值越大说明里程计的误差越大。
odom_alpha5: 0.0 # ~odom_alpha5 (double, default: 0.2)：平移相关的噪声参数（仅用于模型是“omni”的情况，就是当你的机器人是全向移动时才需要设置该参数，否则就设置其为0.0）
odom_frame_id: odom # ~odom_frame_id (string, default: "odom")：里程计默认使用的坐标系。
base_frame_id: base_footprint # ~base_frame_id (string, default: "base_link")：机器人的基坐标系。
global_frame_id: map # ~global_frame_id (string, default: "map")：由定位系统发布的坐标系名称。
tf_broadcast: true # ~tf_broadcast (bool, default: true)：设置为false阻止amcl发布全局坐标系和里程计坐标系之间的tf变换。