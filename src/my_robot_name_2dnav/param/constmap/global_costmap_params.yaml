global_costmap:
  global_frame: map # 全局代价地图需要在哪个坐标系下运行;
  robot_base_frame: base_footprint # 在全局代价地图中机器人本体的基坐标系，就是机器人上的根坐标系。通过global_frame和robot_base_frame就可以计算两个坐标系之间的变换，得知机器人在全局坐标系中的坐标了。
  update_frequency: 1.0 # 全局代价地图更新频率，一般全局代价地图更新频率设置的比较小;
  static_map: true # 配置是否使用map_server提供的地图来初始化，一般全局地图都是静态的，需要设置为true;
  rolling_window: false # 是否在机器人移动过程中需要滚动窗口，始终保持机器人在当前窗口中心位置;
  transform_tolerance: 0.5 # 坐标系间的转换可以忍受的最大延时;
  plugins:
    - { name: static_layer,    type: "costmap_2d::StaticLayer" }
    - { name: obstacle_layer,  type: "costmap_2d::ObstacleLayer" }
    - { name: inflation_layer, type: "costmap_2d::InflationLayer" }